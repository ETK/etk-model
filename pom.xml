<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   
   <groupId>org.etk</groupId>
   <artifactId>org.etk.parent</artifactId>
   <version>0.1-Beta1-SNAPSHOT</version>
   <packaging>pom</packaging>

   <name>Engineering Toolkit Framework</name>
   <description>The Engineering Toolkit projects is an tool to help the developer to develop the application, such as IOC, Caching, Reflection and Unit Test.</description>
   <url>http://etk.googlecode.com/</url>

  <organization>
    <name>Social Team</name>
    <url>http://www.thanhvc.com.vn</url>
  </organization>
  <licenses>
    <license>
      <name>LGPL, version 2.1</name>
      <url>http://www.opensource.org/licenses/lgpl-license.php</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>thanh.vu</id>
      <name>Thanh Vu Cong</name>
      <email>thanhvucong.78@gmail.com</email>
      <roles>
        <role>Owner</role>
      </roles>
    </developer>
  </developers>
  
  <scm>
    <connection>scm:git:git://github.com/thanhvc/etk.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/thanhvc/etk-kernel.git</developerConnection>
    <url>https://github.com/thanhvc/etk-kernel</url>
  </scm>


  <properties>
 
    <!-- Dependencies versions -->
    <junit.version>3.8.2</junit.version>
    <json_simple.version>1.1</json_simple.version>
    <org.slf4j.version>1.5.8</org.slf4j.version>
    <javax.servlet.version>2.5</javax.servlet.version>
    <org.slf4j.version>1.5.8</org.slf4j.version>
    <org.jibx.version>1.2.3</org.jibx.version>
    <org.hsqldb.version>2.0.0</org.hsqldb.version>
    <javax.ws.rs.version>1.0</javax.ws.rs.version>
    <javax.xml.bind.version>2.1</javax.xml.bind.version>
    <picocontainer.version>1.1</picocontainer.version>
    <org.apache.httpclient.version>4.1.1</org.apache.httpclient.version>
    <org.etk.version>0.1-Beta1-SNAPSHOT</org.etk.version>
    <org.etk.component.version>0.1-Beta1-SNAPSHOT</org.etk.component.version>
    <org.etk.kernel.version>0.1-Beta1-SNAPSHOT</org.etk.kernel.version>
    <org.etk.core.version>0.1-Beta1-SNAPSHOT</org.etk.core.version>
    <org.etk.tools.version>0.1-Beta1-SNAPSHOT</org.etk.tools.version>
    <org.exoplatform.kernel.version>2.3.0-CR2</org.exoplatform.kernel.version>
   <org.exoplatform.portal.version>3.2.0-PLF-SNAPSHOT</org.exoplatform.portal.version>
    <!-- Plugins settings -->

    <!-- Cross plugins settings -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- maven-compiler-plugin -->
    <maven.compiler.target>1.5</maven.compiler.target>
    <maven.compiler.source>1.5</maven.compiler.source>

    <!-- maven-surefire-plugin -->
    <!--<argLine>${env.MAVEN_OPTS}</argLine>-->
    <argLine>-Xshare:auto -Xms128m -Xmx512m -XX:MaxPermSize=1024M</argLine>

    <!-- maven-release-plugin -->
    <useReleaseProfile>false</useReleaseProfile>
    <arguments>-Prelease,sign-artifacts</arguments>
    <pushChanges>false</pushChanges>
    <autoVersionSubmodules>true</autoVersionSubmodules>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Internal dependencies -->
     
      <!-- External dependencies -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>3.8.2</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${org.slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>0.9.17</version>
      </dependency>
      <dependency>
        <groupId>org.exoplatform.kernel</groupId>
        <artifactId>exo.kernel.component.cache</artifactId>
        <version>${org.exoplatform.kernel.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>${javax.servlet.version}</version>
      </dependency>
      <dependency>
       <groupId>picocontainer</groupId>
       <artifactId>picocontainer</artifactId>
       <version>${picocontainer.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.ws.rs</groupId>
        <artifactId>jsr311-api</artifactId>
        <version>${javax.ws.rs.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>${javax.xml.bind.version}</version>
      </dependency>
      <dependency>
        <groupId>com.experlog</groupId>
        <artifactId>xapool</artifactId>
        <version>1.5.0</version>
      </dependency>
      
       <dependency>
         <groupId>org.javassist</groupId>
         <artifactId>javassist</artifactId>
         <version>3.14.0-GA</version>
       </dependency>

         
    </dependencies>
    
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <!-- All plugins versions have to be set -->
      <!-- Plugins are sorted by shortname : clean, deploy, ... -->
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>		
          <artifactId>maven-checkstyle-plugin</artifactId>		
          <version>2.4</version>		
        </plugin>		
        <plugin>		
          <groupId>com.atlassian.maven.plugins</groupId>		
          <artifactId>maven-clover2-plugin</artifactId>		
          <version>2.6.3</version>		
        </plugin>		
        <plugin>		
          <groupId>org.codehaus.mojo</groupId>		
          <artifactId>cobertura-maven-plugin</artifactId>		
          <version>2.3</version>		
        </plugin>		
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.0.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.4</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-eclipse-plugin</artifactId>
          <version>2.8</version>
          <configuration>
            <downloadSources>true</downloadSources>
          </configuration>
        </plugin>     
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.0-beta-1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>		
          <artifactId>findbugs-maven-plugin</artifactId>		
          <version>2.3</version>		
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>1.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <!-- Too many issues with 2.6 versions -->
          <version>2.5</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>		
          <artifactId>maven-pmd-plugin</artifactId>		
          <version>2.4</version>		
        </plugin>		
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.4.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>2.0.1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>1.0-beta-1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.1.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.4.3</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.1</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!-- export DYLD_LIBRARY_PATH=/Users/thanh_vucong/java/jprofiler5/bin/macos -->
          <!--<argLine>-agentlib:jprofilerti=port=8849 -Xbootclasspath/a:/Users/thanh_vucong/java/jprofiler5/bin/agent.jar</argLine>-->
          <systemProperties>
            <property>
              <name>com.arjuna.ats.arjuna.objectstore.objectStoreDir</name>
              <value>${project.build.directory}</value>
            </property>
            <property>
              <name>log.output.path</name>
              <value>${project.build.directory}</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <mavenExecutorId>forked-path</mavenExecutorId>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
     <profile>
        <id>Java6</id>
        <activation>
           <jdk>1.6</jdk>
        </activation>
          <modules>
	    <module>reflection</module>
	    <module>container</module>
	    <module>cache</module>
	    <module>test</module>
	  </modules>
     </profile>
     
    <profile>

      <!-- Generation of a jar containing the source code -->
      <!-- Generation can be inactivated by adding -P-sources or -Dskip-sources in the command line -->
      <id>sources</id>
      <activation>
        <property>
          <name>!skip-sources</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <!-- This profile is used when we are doing a release -->
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>sign-artifacts</id>
      <build>
        <plugins>
          <!-- We want to sign the artifact, the POM, and all attached artifacts -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  
  </profiles>

</project>
